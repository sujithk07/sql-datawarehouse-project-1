
--Retrieve a list of Unique Countries From which Customers Originate

Select DISTINCT country From gold.dim_customers;


--Retrieve a list of Unique categories,Subcategories and Products

select DISTINCT category,
subcategory,
product_name
from gold.dim_products
ORDER BY category,subcategory,product_name;

--Determine the First and Last order and the total duration in Months

Select MIN(order_date) AS first_order,
MAX(order_date) AS last_order,
DateDiff(month,MIN(order_date),MAX(order_date)) AS Duration_in_Months
from gold.fact_sales;

--Find the Youngest and Oldest Customer based on BirthDate

select MIN(birthdate) AS Oldest,
Datediff(year,min(birthdate),GETDATE()) AS Oldest_age,
Max(birthdate) AS Youngest,
DateDiff(YEAR,MAX(birthdate),GETDATE()) AS Youngest_age
from gold.dim_customers;

--Find the total Sales

SELECT SUM(sales_amount) AS Total_sales FROM gold.fact_sales;

--Find how many items are sold

SELECT SUM(quantity) AS total_quantity FROM gold.fact_sales;

--Find the average selling price

SELECT AVG(price) AS avg_price FROM gold.fact_sales;

--Find the total number of Orders

SELECT COUNT(order_number) AS total_orders FROM gold.fact_sales;
SELECT COUNT(DISTINCT order_number) AS total_orders FROM gold.fact_sales;

--Find the total number of Products

SELECT COUNT(product_name) AS Total_products from gold.dim_products;

--Find the total Number of Customers

SELECT COUNT(customer_key) AS total_customers FROM gold.dim_customers;

--Find the total number of customers tgat has placed an order
 SELECT COUNT(DISTINCT customer_key) AS total_customers FROM gold.fact_sales;

 --Generating a report which shows KPI's of a business

 SELECT 'TOTAL_SALES' as Measure_name, SUM(sales_amount) as Measure_value from gold.fact_sales
 UNION ALL 
 SELECT 'TOTAL QUANTITY' ,sum(quantity) from gold.fact_sales
 UNION ALL 
 SELECT 'AVERAGE_PRICE',AVG(price) From gold.fact_sales
 UNION ALL
 SELECT 'TOTAL_ORDERS', COUNT(DISTINCT order_number) FROM gold.fact_sales
 UNION ALL
 SELECT 'TOTAL PRODUCTS', COUNT(DISTINCT product_name) FROM gold.dim_products
 UNION ALL 
 SELECT 'TOTAL CUSTOMERS', COUNT(customer_key) FROM gold.dim_customers;

 --Find the total Customers by Countries

 SELECT country,
 COUNT(customer_key) AS total_customers
 FROM gold.dim_customers
 GROUP BY country
 ORDER BY total_customers DESC;

 --Find total customers by gender

 SELECT 
 gender,
 COUNT(customer_key) as TOTAL_customers
 FROM gold.dim_customers
 GROUP BY gender
 Order by total_customers DESC;

 --find the total_products by category
 SELECT category,
 COUNT(product_key) as TOTAL_products
 FROM gold.dim_products
 GROUP BY category
 ORDER BY total_products DESC;

 --what is the average costs in each category

 SELECT 
 category,AVG(cost) as avg_cost
 FROM gold.dim_products
 GROUP BY category
 ORDER BY avg_cost DESC;

 --what is the total revenue generated for each category

 SELECT 
 p.category,
  sum(f.sales_amount) AS total_revenue
 from gold.fact_sales as f
 LEFT JOIN  gold.dim_products p
     ON p.product_key=f.product_key
 GROUP BY p.category
 ORDER BY total_revenue DESC;

 --what is the total revenue generated by each customer
 SELECT 
 c.first_name,
 c.last_name,
 Sum(f.sales_amount) as total_revenue
 FROM gold.fact_sales f
 LEFT JOIN gold.dim_customers c
  ON c.customer_key=f.customer_key
  GROUP BY c.first_name,
  c.last_name
  Order BY total_revenue DESC;

  --what is the distribution of sold items across countries?
  SELECT c.country,
  sum(f.quantity) as Total_sold_items
  From gold.fact_sales f
  LEFT JOIN gold.dim_customers c
  on c.customer_key=f.customer_key
  GROUP BY c.country
  ORDER  BY total_sold_items DESC;

  --which 5 products generating the most LOWEST REVENUE
  --simple Ranking
  SELECT top 5
  p.product_name,
  sum(f.sales_amount) as total_revenue
  from gold.fact_sales f
  LEFT join gold.dim_products p
on p.product_key=f.product_key
GROUP By p.product_name
ORDER BY total_revenue ASC;


 --Find the top 10 customers who have generated the highest revenue

 SELECT TOP 10
 c.first_name,
 c.last_name,
 SUM(f.sales_amount) as total_revenue
 from gold.fact_sales f
 LEFT JOIN gold.dim_customers c
 on c.customer_key=f.customer_key
 GROUP BY c.first_name,
 c.last_name
 Order BY total_revenue DESC;
